version: 2.1

jobs:
  test-38: &test-template
    docker:
      - image: python:3.8

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            pip install -U pip poetry
            poetry install

      - save_cache:
          paths:
            - /root/.cache/pypoetry/virtualenvs
          key: v1-dependencies-{{ checksum "poetry.lock" }}

      - run:
          name: Run tests
          command: |
            poetry run pip install codecov
            poetry run python -m doctest -v ecies/utils.py
            poetry run coverage run -m unittest discover .
            poetry run coverage report
            poetry run coverage xml
            poetry run codecov

      - run:
          name: Test CLI
          command: |
            poetry build
            poetry install
            poetry run eciespy -h
            poetry run eciespy -g
            echo '0x95d3c5e483e9b1d4f5fc8e79b2deaf51362980de62dbb082a9a4257eef653d7d' > prv
            echo '0x98afe4f150642cd05cc9d2fa36458ce0a58567daeaf5fde7333ba9b403011140a4e28911fcf83ab1f457a30b4959efc4b9306f514a4c3711a16a80e3b47eb58b' > pub
            echo 'helloworld' | poetry run eciespy -e -k pub | poetry run eciespy -d -k prv

  test-39:
    <<: *test-template
    docker:
      - image: python:3.9-rc

  test-37:
    <<: *test-template
    docker:
      - image: python:3.7

  test-36:
    <<: *test-template
    docker:
      - image: python:3.6

  test-35:
    <<: *test-template
    docker:
      - image: python:3.5.10

  deploy:
    working_directory: ~/repo
    docker:
      - image: python:3.8
    steps:
      - checkout

      - run:
          name: Setup env
          command: |
            pip install -U pip poetry

      - run:
          name: Upload to pypi
          command: |
            poetry build

            poetry config repositories.testpypi https://test.pypi.org/legacy/
            poetry config pypi-token.testpypi "$TEST_PYPI_TOKEN"
            poetry config pypi-token.pypi "$PYPI_TOKEN"

            poetry publish --repository testpypi
            poetry publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - test-39:
          filters:
            tags:
              only: /^v.*/
      - test-38:
          filters:
            tags:
              only: /^v.*/
      - test-37:
          filters:
            tags:
              only: /^v.*/
      - test-36:
          filters:
            tags:
              only: /^v.*/
      - test-35:
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test-39
            - test-38
            - test-37
            - test-36
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
