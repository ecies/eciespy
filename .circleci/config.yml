version: 2.1

orbs:
  jq: circleci/jq@2.0.2

jobs:
  test-38: &test-template
    docker:
      - image: python:3.8

    working_directory: ~/repo

    steps:
      - checkout

      - jq/install

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            pip install -U pip poetry
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "poetry.lock" }}

      - run:
          name: Run tests
          command: |
            poetry run coverage run -m doctest -v ecies/utils.py
            poetry run coverage run -m unittest discover .
            poetry run coverage xml
            bash <(curl -s https://codecov.io/bash)

      - run:
          name: Test CLI
          command: |
            poetry build
            curl -sL https://github.com/dflemstr/rq/releases/download/v1.0.2/rq-v1.0.2-x86_64-unknown-linux-gnu.tar.gz | tar -xz
            VERSION=$(cat pyproject.toml | ./rq -t | jq '.tool.poetry.version' -r)
            poetry run pip install dist/eciespy-$VERSION.tar.gz
            poetry run eciespy -g

  test-37:
    <<: *test-template
    docker:
      - image: python:3.7

  test-36:
    <<: *test-template
    docker:
      - image: python:3.6

  test-35:
    <<: *test-template
    docker:
      - image: python:3.5.3

  deploy:
    working_directory: ~/repo
    docker:
      - image: python:3.8
    steps:
      - checkout

      - run:
          name: Setup env
          command: |
            pip install -U pip poetry

      - run:
          name: Upload to pypi
          command: |
            poetry build

            poetry config repositories.testpypi https://test.pypi.org/legacy/
            poetry config pypi-token.testpypi "$TEST_PYPI_TOKEN"
            poetry config pypi-token.pypi "$PYPI_TOKEN"

            poetry publish --repository testpypi
            poetry publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - test-38:
          filters:
            tags:
              only: /^v.*/
      - test-37:
          filters:
            tags:
              only: /^v.*/
      - test-36:
          filters:
            tags:
              only: /^v.*/
      - test-35:
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test-38
            - test-37
            - test-36
            - test-35
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
