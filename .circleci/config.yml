version: 2.1

orbs:
  jq: circleci/jq@2.0.2

jobs:
  test-38: &test-template
    docker:
      - image: python:3.8

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            pip install -U pip poetry
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "poetry.lock" }}

      - run:
          name: Run tests
          command: |
            poetry run coverage run -m doctest -v ecies/utils.py
            poetry run coverage run -m unittest discover .
            poetry run coverage xml
            bash <(curl -s https://codecov.io/bash)

      - run:
          name: Test CLI
          command: |
            poetry build
            curl -LSfs https://japaric.github.io/trust/install.sh | sh -s -- --git dflemstr/rq
            cat pyproject.toml | rq -t | jq '.tool.poetry.version' -r
      #       poetry run tomlq pyproject.toml
      #       poetry run pip install dist/eciespy-{}.tar.gz
      #       poetry run eciespy -g
  test-37:
    <<: *test-template
    docker:
      - image: python:3.7

  test-36:
    <<: *test-template
    docker:
      - image: python:3.6

  test-35:
    <<: *test-template
    docker:
      - image: python:3.5.3

  deploy:
    working_directory: ~/repo
    docker:
      - image: python:3.8
    steps:
      - checkout

      - run:
          name: Setup env
          command: |
            pip install -U pip poetry
            python -m venv venv
            venv/bin/pip install -U pip twine wheel
            venv/bin/python setup.py install

      - run:
          name: Upload to pypi
          command: |
            . venv/bin/activate
            python setup.py verify
            python setup.py sdist bdist_wheel
            twine upload dist/* --repository-url https://test.pypi.org/legacy/
            twine upload dist/*

workflows:
  version: 2
  test-deploy:
    jobs:
      - test-38:
          filters:
            tags:
              only: /^v.*/
      - test-37:
          filters:
            tags:
              only: /^v.*/
      - test-36:
          filters:
            tags:
              only: /^v.*/
      - test-35:
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test-38
            - test-37
            - test-36
            - test-35
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
